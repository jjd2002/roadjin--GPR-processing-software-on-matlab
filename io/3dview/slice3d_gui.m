function slice3d_gui(x,y,z,d3d)
%
% SLICE3D_GUI : GUI to control 3-D Slice Plots generated by SLICE3D.M
%         ==>   Used exclusively by SLICE3D.M 
%
%Author : Andreas Tzanis,
%         Department of Geophysics, 
%         University of Athens
%         atzanis@geol.uoa.gr
%
% Copyright (C) 2008, Andreas Tzanis. All rights reserved.
%
%  This program is free software; you can redistribute it and/or modify
%  it under the terms of the GNU General Public License as published by
%  the Free Software Foundation; either version 2 of the License, or
%  (at your option) any later version.
%
%  This program is distributed in the hope that it will be useful,
%  but WITHOUT ANY WARRANTY; without even the implied warranty of
%  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%  GNU General Public License for more details.
%
%  You should have received a copy of the GNU General Public License
%  along with this program; if not, write to the Free Software
%  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
%

figure('name','3-D Slice Display Controls', ...
    'tag','slice3dcontrols', ...
    'position', [800   350   520   400], ...
    'numbertitle','off', ...
    'MenuBar','none',...
    'Resize', 'off', ...
    'Color',[0.76 0.86 0.69]);         % 'Color',[0 0.5 0.5]);
axis off;
fcolor = [0.76 0.87 0.78];             % fcolor = get(gcf,'color');
% data to create direction arrows
ar = ...
 [0 1 1 1 1
  0 0 1 1 1
  0 0 0 1 1
  0 0 0 0 1
  0 0 0 0 0
  0 0 0 0 1
  0 0 0 1 1
  0 0 1 1 1
  0 1 1 1 1];
ar = repmat(ar,[1 1 3]);
%ar(:,:,1) = min(ar(:,:,1),fcolor(1));
%ar(:,:,2) = min(ar(:,:,2),fcolor(2));
%ar(:,:,3) = min(ar(:,:,3),fcolor(3));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Panel to control Number of Slices and mode of display along y-axis
yax = uipanel('Title','Y-slices', ...
    'FontSize',10, ...
    'Fontweight', 'bold', ...
    'BackgroundColor', fcolor,...
    'Position',[0.01 0.01 .98 .25]);
%%%% Set up slider to control Number of Slices displayed
    min_yvalue = y(1,1,1);
    max_yvalue = y(size(y(:,1,1),1),1,1);
    step   = mean(diff(y(:,1,1)))/(max_yvalue - min_yvalue);
    uicontrol('parent',yax, 'Style', 'Slider', 'tag','yslicesslider',...
        'Value', max_yvalue, 'Min', min_yvalue, 'Max', max_yvalue, ...
        'SliderStep', [step step],...
        'Units', 'Normalized', 'Position', [0.1 0.3 0.8 0.2], ...
        'backgroundcolor', fcolor, ...
        'tooltip','Change Number of Y-slices Displayed', ...
        'Callback', {@numslices, x, y, z, d3d} );
    uicontrol('parent', yax, 'style','text',...
        'units','normalized','string',num2str(min_yvalue,'%6.2f'),...
        'position',[0.01 0.3 0.09 0.2], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontsize',9, 'fontweight','bold');
    uicontrol('parent' ,yax, 'style','text',...
        'units','normalized', 'string',num2str(max_yvalue,'%6.2f'), ...
        'position',[0.9 0.3 0.09 0.2],...
        'backgroundcolor',fcolor, ...
        'horizontalal','center','fontsize',10, 'fontweight','bold');
    uicontrol('parent', yax, 'style','text','units','normalized', ...
        'string','Display Y-Slices' ,...
        'position',[0.05 0.05 0.3 0.2], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontweight', 'bold', ...
        'fontsize',10);
    uicontrol('Parent', yax, 'Style', 'edit', 'tag','yslicesbox',...
        'Units', 'Normalized', 'Position', [0.4 0.01 0.2 0.26], ...
        'backgroundcolor', fcolor, ...
        'fontsize', 10, ...
        'string', num2str(max_yvalue,'%6.2f'), ...
        'tooltip','Change Number of Y-Slices Displayed', ...
        'Callback', {@numslices, x, y, z, d3d} );
    
    %%%% Push Buttons to control Transparency/ Translucence
    uicontrol('parent', yax, 'style','text','units','normalized', ...
        'string','Transparency' ,...
        'position',[0.2 0.7 0.2 0.2], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontweight', 'bold', ...
        'fontsize',10);
        % Decrease Transparency - down pointed arrow
        ar1 = permute(ar,[2 1 3]);
    uicontrol('parent',yax, 'style','push', 'tag', 'transp-down', ...
      'Units', 'normalized', 'pos',[0.1 0.7 0.1 0.2], ...
      'CData',ar1,  ...
      'tooltip','Decrease Trasparency', ...
      'Enable', 'off', ...
      'callback',...
     ['cax = get(findobj(''tag'',''3dslicesaxes''),''Clim''); ' ...
      'alphamap(findobj(''tag'',''slice3dfigure''),''increase'',0.1); ' ...
      'alim(findobj(''tag'',''3dslicesaxes''),cax); ' ...
      'clear cax; ']);
    % Increase Transparency - up pointed arrow
    ar1 = permute(ar,[2 1 3]); ar1 = ar1(end:-1:1,:,:);
    uicontrol('parent',yax, 'style','push', 'tag', 'transp-up', ...
      'Units', 'normalized', 'pos',[0.4 0.7 0.1 0.2], ...
      'CData',ar1,  ...
      'tooltip','Increase Trasparency', ...
      'enable', 'off', ...
      'callback',...
     ['cax = get(findobj(''tag'',''3dslicesaxes''),''Clim''); ' ...
      'alphamap(findobj(''tag'',''slice3dfigure''),''decrease'',0.1); ' ...
      'alim(findobj(''tag'',''3dslicesaxes''),cax); ' ...
      'clear cax; ']);
  
    % Checkbox to switch translucence on/off
    uicontrol('parent',yax, 'style','checkbox','tag','ytranslonoff', ...
        'units','normalized','pos',[0.6 0.7 0.35 0.2], ...
        'backgroundcolor',fcolor, ...
        'fontsize', 10, 'fontweight','bold', ...
        'string','Translucence On/Off','value',0, ...
        'callback',...
       ['transl = get(findobj(''tag'',''ytranslonoff''),''value''); ' ...
        'if transl == 1, ' ...
        '    cax = get(findobj(''tag'',''3dslicesaxes''),''Clim''); ' ...
        '    alpha(findobj(''tag'',''h3dslices''),''color''); ' ...
        '    alphamap(findobj(''tag'',''slice3dfigure''),''vdown''); ' ...
        '    alim(findobj(''tag'',''3dslicesaxes''),cax); ' ...
        '    set(findobj(''tag'',''transp-down''),''Enable'',''on''); ' ...
        '    set(findobj(''tag'',''transp-up''),''Enable'',''on''); ' ...
        'elseif transl == 0, ' ...
        '    set(findobj(''Tag'',''h3dslices''),''facealpha'',1); ' ...
        '    set(findobj(''tag'',''transp-down''),''Enable'',''off''); ' ...
        '    set(findobj(''tag'',''transp-up''),''Enable'',''off''); ' ...
        'end; ' ...
        'clear transl cax; ' ]);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Panel to control Number of Slices and mode of display along x- and z-axis
xzax = uipanel('Title','X, Z Slices', ...
    'FontSize',10, ...
    'Fontweight', 'bold', ...
    'BackgroundColor', fcolor,...
    'Position',[0.01 0.275 .98 .3]);
% Slider for Z-slices
    min_zvalue = z(1,1,1);
    max_zvalue = z(1,1,size(z(1,1,:),3));
    step   = mean(diff(z(1,1,:)))/(max_zvalue - min_zvalue);
    uicontrol('parent',xzax, 'Style', 'Slider', 'tag','zslicesslider',...
        'Value', min_zvalue, 'Min', min_zvalue, 'Max', max_zvalue, ...
        'SliderStep', [step step],...
        'Units', 'Normalized', 'Position', [0.1 0.3 0.8 0.16], ...
        'backgroundcolor', fcolor, ...
        'tooltip','Display a Time or Depth slice', ...
        'Callback', {@zslices, x, y, z, d3d}); 
    uicontrol('parent', xzax, 'style','text',...
        'units','normalized','string',num2str(min_zvalue,'%6.2f'),...
        'position',[0.01 0.3 0.09 0.16], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontsize',10, 'fontweight','bold');
    uicontrol('parent' ,xzax, 'style','text',...
        'units','normalized', 'string',num2str(max_zvalue,'%6.2f'), ...
        'position',[0.9 0.3 0.09 0.16],...
        'backgroundcolor',fcolor, ...
        'horizontalal','center','fontsize',10, 'fontweight','bold');
% Edit box for z-slices
    uicontrol('Parent', xzax, 'Style', 'edit', 'tag','zslicesbox',...
        'Units', 'Normalized', 'Position', [0.4 0.05 0.2 0.22], ...
        'backgroundcolor', fcolor, ...
        'fontsize', 10, ...
        'string', 'Enter Z-Slice', ...
        'tooltip','Display a Time or Depth Slice', ...
        'Callback', {@zslices, x, y, z, d3d}); 
% Annotation text
    uicontrol('parent', xzax, 'style','text','units','normalized', ...
        'string','Display Z-Slice' ,...
        'position',[0.05 0.01 0.3 0.2], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontweight', 'bold', ...
        'fontsize',10);
% Push button to remove Z-slice
    uicontrol('parent', xzax, 'style','push', ...
        'units','normalized','pos',[0.8 0.01 0.2 0.2], ...
        'fontsize', 10, 'fontweight','bold', ...
        'string','Clear Z-slice','value',0,...
        'callback', ...
       ['if ishandle(findobj(''tag'',''z3dslices'')), '...
        '    delete(findobj(''tag'',''z3dslices'')); ' ...
        '    set(findobj(''tag'',''zslicesbox''),''string'',''Enter Z-Slice''); ' ...
        '    set(findobj(''tag'',''zslicesslider''),''value'', ' ...
        '        get(findobj(''tag'',''zslicesslider''),''Min'')); ' ...
        'end; ' ]); 

% Slider for X-slices
    min_xvalue = x(1,1,1);
    max_xvalue = x(1,size(x(1,:,1),2));
    step   = mean(diff(x(1,:,1)))/(max_xvalue - min_xvalue);
    uicontrol('parent',xzax, 'Style', 'Slider', 'tag','xslicesslider',...
        'Value', max_xvalue, 'Min', min_xvalue, 'Max', max_xvalue, ...
        'SliderStep', [step step],...
        'Units', 'Normalized', 'Position', [0.1 0.8 0.8 0.16], ...
        'backgroundcolor', fcolor, ...
        'tooltip','Display an X-Slice', ...
        'Callback', {@xslices, x, y, z, d3d});
    uicontrol('parent', xzax, 'style','text',...
        'units','normalized','string',num2str(min_xvalue,'%6.2f'),...
        'position',[0.01 0.8 0.09 0.16], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontsize',10, 'fontweight','bold');
    uicontrol('parent' ,xzax, 'style','text',...
        'units','normalized', 'string',num2str(max_xvalue,'%6.2f'), ...
        'position',[0.9 0.8 0.09 0.16],...
        'backgroundcolor',fcolor, ...
        'horizontalal','center','fontsize',9, 'fontweight','bold');
% Edit box for x-slices
    uicontrol('Parent', xzax, 'Style', 'edit', 'tag','xslicesbox',...
        'Units', 'Normalized', 'Position', [0.4 0.55 0.2 0.22], ...
        'backgroundcolor', fcolor, ...
        'fontsize', 10, ...
        'string', 'Enter X-Slice', ...
        'tooltip','Display an X-Slice', ...
        'Callback', {@xslices, x, y, z, d3d});
% Annotation text
    uicontrol('parent', xzax, 'style','text','units','normalized', ...
        'string','Display X-Slice' ,...
        'position',[0.05 0.55 0.3 0.2], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontweight', 'bold', ...
        'fontsize',10);
% Push button to remove X-slice
    uicontrol('parent', xzax, 'style','push', ...
        'units','normalized','pos',[0.8 0.55 0.2 0.2], ...
        'fontsize', 10, 'fontweight','bold', ...
        'string','Clear X-slice','value',0,...
        'callback', ...
       ['if ishandle(findobj(''tag'',''x3dslices'')), '...
        '    delete(findobj(''tag'',''x3dslices'')); ' ...
        '    set(findobj(''tag'',''xslicesbox''),''string'',''Enter X-Slice''); ' ...
        '    set(findobj(''tag'',''xslicesslider''),''value'', '...
        '        get(findobj(''tag'',''xslicesslider''),''Max'')); ' ...
        'end; ' ]); 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Slider to control colour saturation
maxcolorvalue = max(max(max(d3d)));
mincolorvalue = min(min(min(d3d)));
maxcolor      = max(abs([maxcolorvalue mincolorvalue]));
cvalue = max(abs(get(findobj('tag','3dslicesaxes'),'Clim')));
uicontrol('Style', 'Slider', 'tag','cshandle',...
    'Value', cvalue, 'Min', 0, 'Max', maxcolor, ...
    'Userdata', [mincolorvalue maxcolorvalue], ...
    'SliderStep', [0.01 0.1],...
    'Units', 'Normalized', 'Position', [0.1 0.6 0.8 0.04], ...
    'backgroundcolor', fcolor, ...
    'tooltip','Change Colour Saturation', ...
    'Callback',...
   ['cvalue = get(findobj(''tag'',''cshandle''),''value''); ' ...
    'maxcolor = get(findobj(''tag'',''cshandle''),''Max''); ' ...
    'cax = get(findobj(''tag'',''cshandle''),''userdata'')*(cvalue/maxcolor); ' ...
    'set(findobj(''tag'',''3dslicesaxes''),''Clim'', cax); ' ...
    'transl = get(findobj(''tag'',''ytranslonoff''),''value''); ' ...
    'if transl == 1, ' ...
    '    alim(findobj(''tag'',''3dslicesaxes''),cax); ' ...
    'end; ' ...
    'clear cvalue maxcolor cax transl; ' ]);
uicontrol('style','text','units','normalized', ...
    'string','Colour Saturation' ,...
    'position',[0.35 0.64 0.3 0.05], ...
    'backgroundcolor',fcolor, ...
    'horizontalal','center',...
    'fontweight', 'bold', ...
    'fontsize',10);
uicontrol('style','text',...
    'units','normalized','string','0.00',...
    'position',[0.01 0.6 0.09 0.04], ...
    'backgroundcolor',fcolor, ...
    'horizontalal','center',...
    'fontsize',9, 'fontweight','bold');
uicontrol('style','text',...
    'units','normalized', 'string',num2str(maxcolor,'%6.2f'), ...
    'position',[0.9 0.6 0.09 0.04],...
    'backgroundcolor',fcolor, ...
    'horizontalal','center','fontsize',10, 'fontweight','bold');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Panel to control data aspect ratio
asp = uipanel('Title','Aspect Ratio', ...
    'FontSize',10, ...
    'Fontweight', 'bold', ...
    'BackgroundColor', fcolor,...
    'Position',[.01 .7 .2625 .30]);
    daspr = get(findobj('tag','3dslicesaxes'),'dataaspectratio');
    % Z-axis aspect 
    uicontrol('parent',asp, 'style','text', ...
        'string','Z:', 'fontsize',12, 'fontweight','bold', ...
        'backgroundcolor', fcolor, ...
        'position', [10, 10, 20, 20]);
    uicontrol('parent',asp, 'style','edit', 'tag', 'translzaspectbox', ...
        'backgroundcolor', fcolor, ...
        'tooltip','Set z-axis aspect', ...
        'position',[35, 6, 60, 28], ...
        'string', num2str(round(daspr(3))), ...
        'fontsize',11, 'fontweight', 'bold', ...
        'Callback', ...
       ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
        'daspr(3) = str2num(get(findobj(''tag'',''translzaspectbox''),''string'')); ' ...
        'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
        'clear daspr; ']);
        % Fine tuning - down pointed arrow
        ar1 = permute(ar,[2 1 3]);
        uicontrol('parent',asp, 'style','push','pos',[96 5 20 15], ...
          'CData',ar1,  ...
          'tooltip','Tune z-axis aspect', ...
          'callback',...
           ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
            'daspr(3) = str2num(get(findobj(''tag'',''translzaspectbox''),''string'')) ' ...
            ' - daspr(3)/20; ' ...
            'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
            'set(findobj(''tag'',''translzaspectbox''),''string'',num2str(daspr(3),''%6.1f'')); ' ...
            'clear daspr; ']);
    % Fine tuning - up pointed arrow
    ar1 = permute(ar,[2 1 3]); ar1 = ar1(end:-1:1,:,:);
    uicontrol('parent',asp, 'style','push','pos',[96 20 20 15], ...
      'CData',ar1,  ...
      'tooltip','Tune z-axis aspect', ...
      'callback',...
       ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
        'daspr(3) = str2num(get(findobj(''tag'',''translzaspectbox''),''string'')) + daspr(3)/20; ' ...
        'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
        'set(findobj(''tag'',''translzaspectbox''),''string'',num2str(daspr(3),''%6.1f'')); ' ...
        'clear daspr; ']);
% Y-axis aspect 
    uicontrol('parent',asp, 'style','text', ...
        'string','Y:', 'fontsize',12, 'fontweight','bold', ...
        'backgroundcolor', fcolor, ...
        'position', [10, 40, 20, 20]);
    uicontrol('parent',asp, 'style','edit', 'tag', 'translyaspectbox', ...
        'backgroundcolor', fcolor, ...
        'tooltip','Set y-axis aspect', ...
        'position',[35, 36, 60, 28], ...
        'string', num2str(round(daspr(2))), ...
        'fontsize',11, 'fontweight', 'bold', ...
        'Callback', ...
       ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
        'daspr(2) = str2num(get(findobj(''tag'',''translyaspectbox''),''string'')); ' ...
        'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
        'clear daspr; ']);
    % Fine tuning - down pointed arrow
    ar1 = permute(ar,[2 1 3]);
    uicontrol('parent',asp, 'style','push','pos',[96 35 20 15], ...
      'CData',ar1,  ...
      'tooltip','Tune y-axis aspect', ...
       'callback',...
       ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
        'daspr(2) = str2num(get(findobj(''tag'',''translyaspectbox''),''string'')) - daspr(2)/20; ' ...
        'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
        'set(findobj(''tag'',''translyaspectbox''),''string'',num2str(daspr(2),''%7.2f'')); ' ...
        'clear daspr; ']);
    % Fine tuning - up pointed arrow
    ar1 = permute(ar,[2 1 3]); ar1 = ar1(end:-1:1,:,:);
    uicontrol('parent',asp, 'style','push','pos',[96 50 20 15], ...
      'CData',ar1,  ...
      'tooltip','Tune y-axis aspect', ...
      'callback',...
       ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
        'daspr(2) = str2num(get(findobj(''tag'',''translyaspectbox''),''string'')) + daspr(2)/20; ' ...
        'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
        'set(findobj(''tag'',''translyaspectbox''),''string'',num2str(daspr(2),''%7.2f'')); ' ...
        'clear daspr; ']);
% X-axis aspect 
    uicontrol('parent',asp, 'style','text', ...
        'string','X:', 'fontsize',12, 'fontweight','bold', ...
        'backgroundcolor', fcolor, ...
        'position', [10, 70, 20, 20]);
    uicontrol('parent',asp, 'style','edit', 'tag', 'translxaspectbox', ...
        'backgroundcolor', fcolor, ...
        'tooltip','Set x-axis aspect', ...
        'position',[35, 66, 60, 28], ...
        'string', num2str(round(daspr(1))), ...
        'fontsize',11, 'fontweight', 'bold', ...
        'Callback', ...
       ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
        'daspr(1) = str2num(get(findobj(''tag'',''translxaspectbox''),''string'')); ' ...
        'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
        'clear daspr; ']);
    % Fine tuning - down pointed arrow
    ar1 = permute(ar,[2 1 3]);
    uicontrol('parent',asp, 'style','push','pos',[96 65 20 15], ...
      'CData',ar1, ...
      'tooltip','Tune x-axis aspect', ...
      'callback',...
       ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
        'daspr(1) = str2num(get(findobj(''tag'',''translxaspectbox''),''string'')) - daspr(1)/20; ' ...
        'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
        'set(findobj(''tag'',''translxaspectbox''),''string'',num2str(daspr(1),''%7.2f'')); ' ...
        'clear daspr; ']);
    % Fine tuning - up pointed arrow
    ar1 = permute(ar,[2 1 3]); ar1 = ar1(end:-1:1,:,:);
    uicontrol('parent',asp, 'style','push','pos',[96 80 20 15], ...
      'CData',ar1, ...
      'tooltip','Tune x-axis aspect', ...
       'callback',...
       ['daspr = get(findobj(''tag'',''3dslicesaxes''),''dataaspectratio''); ' ...
        'daspr(1) = str2num(get(findobj(''tag'',''translxaspectbox''),''string'')) + daspr(1)/20; ' ...
        'set(findobj(''tag'',''3dslicesaxes''),''dataaspectratio'',daspr); ' ...
        'set(findobj(''tag'',''translxaspectbox''),''string'',num2str(daspr(1),''%7.2f'')); ' ...
        'clear daspr; ']);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Panel to control viewer azimuth and elevation
vpos = uipanel('Title','Viewer Position', ...
    'FontSize',10, ...
    'Fontweight', 'bold', ...
    'BackgroundColor', fcolor,...
    'Position',[.29 .7 .55 .3]);
    [laz,lel] = view(findobj('tag','3dslicesaxes'));
    % Slide to control viewer elevation
    uicontrol('Parent',vpos,'Style', 'Slider', 'tag','sliceelevhandle',...
        'Value', lel, 'Min', -90, 'Max', 90, ...
        'SliderStep', [0.01 0.01],...
        'Units', 'Normalized', 'Position', [0.025 0.18 0.6 0.15], ...
        'backgroundcolor', fcolor, ...
        'tooltip','Change viewer (camera) elevation', ...
        'Callback',...
       ['[laz,lel]=view(findobj(''tag'',''3dslicesaxes'')); ' ...
        'lel = get(findobj(''tag'',''sliceelevhandle''),''value''); ' ...
        'view(findobj(''tag'',''3dslicesaxes''),laz,lel); ' ...
        'set(findobj(''tag'',''sliceelevbox''),''string'', num2str(lel,''%6.2f'')); ' ...
        'clear laz lel; ' ]); 
    % Slider Annotation
    uicontrol('parent', vpos, 'style','text',...
        'units','normalized','string','Elevation' ,...
        'position',[0.175 0.35 0.3 0.15], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontsize',10, 'fontweight','bold');
   uicontrol('parent', vpos, 'style','text',...
        'units','normalized','string','-90' ,...
        'position',[0.0 0.35 0.1 0.15], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontsize',10, 'fontweight','bold');
    uicontrol('parent' ,vpos, 'style','text',...
        'units','normalized', 'string','90', ...
        'position',[0.54 0.35 0.1 0.15],...
        'backgroundcolor',fcolor, ...
        'horizontalal','center','fontsize',10, 'fontweight','bold');
    % Edit box for Elevation 
    uicontrol('Parent', vpos, 'Style', 'edit', 'tag','sliceelevbox',...
        'Units', 'Normalized', 'Position', [0.7 0.13 0.25 0.25], ...
        'backgroundcolor', fcolor, ...
        'fontsize', 10, ...
        'string', num2str(lel,'%6.2f'), ...
        'tooltip','Enter Viewer Elevation', ...
        'Callback', ...
       ['[laz,lel]=view(findobj(''tag'',''3dslicesaxes'')); ' ...
        'lel = str2num(get(findobj(''tag'',''sliceelevbox''),''string'')); ' ...
        'view(findobj(''tag'',''3dslicesaxes''),laz,lel); ' ...
        'set(findobj(''tag'',''sliceelevhandle''),''value'',lel); ' ...
        'clear laz lel; ' ]); 
   
    % Slider to control viewer azimuth
    uicontrol('Parent',vpos,'Style', 'Slider', 'tag','sliceazhandle',...
        'Value', laz, 'Min', -180, 'Max', 180, ...
        'SliderStep', [0.01 0.01],...
        'Units', 'Normalized', 'Position', [0.025 0.65 0.6 0.15], ...
        'backgroundcolor', fcolor, ...
        'tooltip','Change viewer (camera) azimuth', ...
        'Callback',...
       ['[laz,lel]=view(findobj(''tag'',''3dslicesaxes'')); ' ...
        'laz = get(findobj(''tag'',''sliceazhandle''),''value''); ' ...
        'view(findobj(''tag'',''3dslicesaxes''),laz,lel); ' ...
        'set(findobj(''tag'',''sliceazbox''),''string'', num2str(laz,''%6.2f'')); ' ...
        'clear laz lel; ' ]); 
    %Slider Annotation
    uicontrol('parent', vpos, 'style','text',...
        'units','normalized','string','Azimuth' ,...
        'position',[0.175 0.82 0.3 0.15], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontsize',10, 'fontweight','bold');
    uicontrol('parent', vpos, 'style','text',...
        'units','normalized','string','-180' ,...
        'position',[0.0 0.82 0.1 0.15], ...
        'backgroundcolor',fcolor, ...
        'horizontalal','center',...
        'fontsize',10, 'fontweight','bold');
    uicontrol('parent' ,vpos, 'style','text',...
        'units','normalized', 'string','180', ...
        'position',[0.54 0.82 0.1 0.15],...
        'backgroundcolor',fcolor, ...
        'horizontalal','center','fontsize',10, 'fontweight','bold');
    % Edit box for Azimuth 
    uicontrol('Parent', vpos, 'Style', 'edit', 'tag','sliceazbox',...
        'Units', 'Normalized', 'Position', [0.7 0.6 0.25 0.25], ...
        'backgroundcolor', fcolor, ...
        'fontsize', 10, ...
        'string', num2str(laz,'%6.2f'), ...
        'tooltip','Enter Viewer Azimuth', ...
        'Callback', ...
       ['[laz,lel]=view(findobj(''tag'',''3dslicesaxes'')); ' ...
        'laz = str2num(get(findobj(''tag'',''sliceazbox''),''string'')); ' ...
        'view(findobj(''tag'',''3dslicesaxes''),laz,lel); ' ...
        'set(findobj(''tag'',''sliceazhandle''),''value'',laz); ' ...
        'clear laz lel; ' ]); 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Push button to Close Session
uicontrol('style','push', ...
    'units','normalized','pos',[0.85 0.8 0.1 0.1], ...
    'fontsize', 10, 'fontweight','bold', ...
    'string','Close','value',0,...
    'callback', 'delete(findobj(''tag'',''slice3dfigure'')); '); 

return

function numslices(obj,evd,x, y, z, d3d) %#ok<INUSL>
% Changes number of slices displayed using the slider
[laz,lel]=view(findobj('tag','3dslicesaxes')); 
cax = get(findobj('tag','3dslicesaxes'),'Clim'); 
if strcmp(get(obj,'style'),'slider')
    Nyslices = get(findobj('tag','yslicesslider'),'value');
elseif strcmpi(get(obj,'style'),'edit')
    Nyslices = str2num(get(findobj('tag','yslicesbox'),'string')); 
else
    return
end
ii = find(y(:,1,1) <= Nyslices); 
figure(findobj('tag','slice3dfigure')); 
delete(findobj('tag','h3dslices')); 
hs = slice(x,y,z,d3d,[],y(ii,1,1),[]); 
set(hs,'FaceColor','flat','EdgeColor','none','tag','h3dslices'); 
view(findobj('tag','3dslicesaxes'),laz,lel); 
Nzslice = str2num(get(findobj('tag','zslicesbox'),'string')); 
if ~isempty(Nzslice), 
    kk = find(z(1,1,:) <= Nzslice); kk = length(kk); 
    if ishandle(findobj('tag','z3dslices')), 
        delete(findobj('tag','z3dslices')); 
    end; 
    zs = slice(x(ii,:,:),y(ii,:,:),z(ii,:,:),d3d(ii,:,:),[],[],z(1,1,kk)); 
    set(zs,'FaceColor','flat','EdgeColor','none','tag','z3dslices'); 
end; 
Nxslice = str2num(get(findobj('tag','xslicesbox'),'string')); 
if ~isempty(Nxslice), 
    jj = find(x(1,:,1) <= Nxslice); jj = length(jj); 
    if ishandle(findobj('tag','x3dslices')), 
        delete(findobj('tag','x3dslices')); 
    end; 
    xs = slice(x(ii,:,:),y(ii,:,:),z(ii,:,:),d3d(ii,:,:),x(1,jj,1),[],[]); 
    set(xs,'FaceColor','flat','EdgeColor','none','tag','x3dslices'); 
end; 
set(findobj('tag','3dslicesaxes'),'Clim',cax); 
transl = get(findobj('tag','ytranslonoff'),'value'); 
if transl == 1, 
    alpha(findobj('tag','h3dslices'),'color'); 
    alphamap(findobj('tag','slice3dfigure'),'vdown'); 
    alim(findobj('tag','3dslicesaxes'),cax); 
end; 
if strcmp(get(obj,'style'),'slider')
    set(findobj('tag','yslicesbox'),'string', num2str(y(length(ii),1,1),'%6.2f')); 
elseif strcmpi(get(obj,'style'),'edit')
    set(findobj('tag','yslicesslider'),'value', Nyslices); 
end
return

function zslices(obj,evd,x, y, z, d3d) %#ok<INUSL>
% Displays a Z-slice using the slider
[laz,lel]=view(findobj('tag','3dslicesaxes')); 
cax = get(findobj('tag','3dslicesaxes'),'Clim'); 
Nyslices = get(findobj('tag','yslicesslider'),'value'); 
ii = find(y(:,1,1) <= Nyslices); 
if strcmp(get(obj,'style'),'slider')
    Nzslice = get(findobj('tag','zslicesslider'),'value');
elseif strcmpi(get(obj,'style'),'edit')
    Nzslice = str2num(get(findobj('tag','zslicesbox'),'string')); 
else
    return
end
kk = find(z(1,1,:) <= Nzslice); kk = length(kk); 
figure(findobj('tag','slice3dfigure')); 
if ishandle(findobj('tag','z3dslices')), 
    delete(findobj('tag','z3dslices')); 
end; 
zs = slice(x(ii,:,:),y(ii,:,:),z(ii,:,:),d3d(ii,:,:),[],[],z(1,1,kk)); 
set(zs,'FaceColor','flat','EdgeColor','none','tag','z3dslices'); 
view(findobj('tag','3dslicesaxes'),laz,lel); 
set(findobj('tag','3dslicesaxes'),'Clim',cax); 
if strcmp(get(obj,'style'),'slider')
    set(findobj('tag','zslicesbox'),'string', num2str(Nzslice,'%6.2f'));
elseif strcmpi(get(obj,'style'),'edit')
    set(findobj('tag','zslicesslider'),'value', Nzslice);  
end
return

function xslices(obj,evd,x, y, z, d3d) %#ok<INUSL>
% Displays an X-slice using the slider
[laz,lel]=view(findobj('tag','3dslicesaxes')); 
cax = get(findobj('tag','3dslicesaxes'),'Clim'); 
Nyslices = get(findobj('tag','yslicesslider'),'value'); 
ii = find(y(:,1,1) <= Nyslices); 
if strcmp(get(obj,'style'),'slider')
    Nxslice = get(findobj('tag','xslicesslider'),'value'); 
elseif strcmpi(get(obj,'style'),'edit')
    Nxslice = str2num(get(findobj('tag','xslicesbox'),'string'));  
else
    return
end
jj = find(x(1,:,1) <= Nxslice); jj = length(jj); 
figure(findobj('tag','slice3dfigure')); 
if ishandle(findobj('tag','x3dslices')), 
    delete(findobj('tag','x3dslices')); 
end; 
xs = slice(x(ii,:,:),y(ii,:,:),z(ii,:,:),d3d(ii,:,:),x(1,jj,1),[],[]); 
set(xs,'FaceColor','flat','EdgeColor','none','tag','x3dslices'); 
view(findobj('tag','3dslicesaxes'),laz,lel); 
set(findobj('tag','3dslicesaxes'),'Clim',cax);
if strcmp(get(obj,'style'),'slider')
    set(findobj('tag','xslicesbox'),'string', num2str(Nxslice,'%6.2f')); 
elseif strcmpi(get(obj,'style'),'edit')
    set(findobj('tag','xslicesslider'),'value', Nxslice);  
end
return

